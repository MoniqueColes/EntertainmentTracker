@model BooksAndMovies.Models.CommentModels.CommentCreate

@{
    ViewBag.Title = "Create";
}

<style>
    body {
        background-color: tan;
    }
</style>

<h2>Add Comment</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.TypeOfMedia, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EnumDropDownListFor(model => model.TypeOfMedia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(model => model.TypeOfMedia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Book.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @** @Html.DropDownList(model => model.Book, (SelectList)ViewBag.BookID)*@
            @Html.DropDownList("BookID", null, new { @class = "form-control" })
            @*  @Html.DropDownListFor(model => model.Movie, (SelectList)ViewBag.MovieID)
        @Html.DropDownListFor(model => model.Show, (SelectList)ViewBag.ShowID)
        @Html.DropDownListFor(model => model.TheaterProduction, (SelectList)ViewBag.TheaterProductionID)*@


            @*@Html.DropDownList("BookID", new SelectList(ViewBag.BookID), null, new { @class = "form-control" })*@
            @*@Html.EditorFor(model => model.Book.Title, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Book.BookID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MyComment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MyComment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MyComment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsRecommended, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsRecommended)
                @Html.ValidationMessageFor(model => model.IsRecommended, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
